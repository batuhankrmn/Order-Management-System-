# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GP_SON.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 923)
        MainWindow.setMinimumSize(QtCore.QSize(699, 453))
        MainWindow.setMaximumSize(QtCore.QSize(16777215, 16777215))
        MainWindow.setStyleSheet("/*\n"
" * The MIT License (MIT)\n"
" *\n"
" * Copyright (c) <2013-2014> <Colin Duquesnoy>\n"
" *\n"
" * Permission is hereby granted, free of charge, to any person obtaining a copy\n"
" * of this software and associated documentation files (the \"Software\"), to deal\n"
" * in the Software without restriction, including without limitation the rights\n"
" * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n"
" * copies of the Software, and to permit persons to whom the Software is\n"
" * furnished to do so, subject to the following conditions:\n"
"\n"
" * The above copyright notice and this permission notice shall be included in\n"
" * all copies or substantial portions of the Software.\n"
"\n"
" * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n"
" * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n"
" * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n"
" * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n"
" * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n"
" * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n"
" * THE SOFTWARE.\n"
" */\n"
"\n"
"QProgressBar:horizontal {\n"
"    border: 1px solid #3A3939;\n"
"    text-align: center;\n"
"    padding: 1px;\n"
"    background: #201F1F;\n"
"}\n"
"QProgressBar::chunk:horizontal {\n"
"    background-color: qlineargradient(spread:reflect, x1:1, y1:0.545, x2:1, y2:0, stop:0 rgba(28, 66, 111, 255), stop:1 rgba(37, 87, 146, 255));\n"
"}\n"
"\n"
"QToolTip\n"
"{\n"
"    border: 1px solid #3A3939;\n"
"    background-color: rgb(90, 102, 117);;\n"
"    color: white;\n"
"    padding: 1px;\n"
"    opacity: 200;\n"
"}\n"
"\n"
"QWidget\n"
"{\n"
"    color: silver;\n"
"    background-color: #302F2F;\n"
"    selection-background-color:#3d8ec9;\n"
"    selection-color: black;\n"
"    background-clip: border;\n"
"    border-image: none;\n"
"    outline: 0;\n"
"}\n"
"\n"
"QWidget:item:hover\n"
"{\n"
"    background-color: #78879b;\n"
"    color: black;\n"
"}\n"
"\n"
"QWidget:item:selected\n"
"{\n"
"    background-color: #3d8ec9;\n"
"}\n"
"\n"
"QCheckBox\n"
"{\n"
"    spacing: 5px;\n"
"    outline: none;\n"
"    color: #bbb;\n"
"    margin-bottom: 2px;\n"
"}\n"
"\n"
"QCheckBox:disabled\n"
"{\n"
"    color: #777777;\n"
"}\n"
"QCheckBox::indicator,\n"
"QGroupBox::indicator\n"
"{\n"
"    width: 18px;\n"
"    height: 18px;\n"
"}\n"
"QGroupBox::indicator\n"
"{\n"
"    margin-left: 2px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked,\n"
"QCheckBox::indicator:unchecked:hover,\n"
"QGroupBox::indicator:unchecked,\n"
"QGroupBox::indicator:unchecked:hover\n"
"{\n"
"    image: url(:/dark_blue/img/checkbox_unchecked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:focus,\n"
"QCheckBox::indicator:unchecked:pressed,\n"
"QGroupBox::indicator:unchecked:focus,\n"
"QGroupBox::indicator:unchecked:pressed\n"
"{\n"
"  border: none;\n"
"    image: url(:/dark_blue/img/checkbox_unchecked_focus.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked,\n"
"QCheckBox::indicator:checked:hover,\n"
"QGroupBox::indicator:checked,\n"
"QGroupBox::indicator:checked:hover\n"
"{\n"
"    image: url(:/dark_blue/img/checkbox_checked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:focus,\n"
"QCheckBox::indicator:checked:pressed,\n"
"QGroupBox::indicator:checked:focus,\n"
"QGroupBox::indicator:checked:pressed\n"
"{\n"
"  border: none;\n"
"    image: url(:/dark_blue/img/checkbox_checked_focus.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:indeterminate,\n"
"QCheckBox::indicator:indeterminate:hover,\n"
"QCheckBox::indicator:indeterminate:pressed\n"
"QGroupBox::indicator:indeterminate,\n"
"QGroupBox::indicator:indeterminate:hover,\n"
"QGroupBox::indicator:indeterminate:pressed\n"
"{\n"
"    image: url(:/dark_blue/img/checkbox_indeterminate.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:indeterminate:focus,\n"
"QGroupBox::indicator:indeterminate:focus\n"
"{\n"
"    image: url(:/dark_blue/img/checkbox_indeterminate_focus.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:disabled,\n"
"QGroupBox::indicator:checked:disabled\n"
"{\n"
"    image: url(:/dark_blue/img/checkbox_checked_disabled.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:disabled,\n"
"QGroupBox::indicator:unchecked:disabled\n"
"{\n"
"    image: url(:/dark_blue/img/checkbox_unchecked_disabled.png);\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"QMenuBar\n"
"{\n"
"    background-color: #302F2F;\n"
"    color: silver;\n"
"}\n"
"\n"
"QMenuBar::item\n"
"{\n"
"    background: transparent;\n"
"}\n"
"\n"
"QMenuBar::item:selected\n"
"{\n"
"    background: transparent;\n"
"    border: 1px solid #3A3939;\n"
"}\n"
"\n"
"QMenuBar::item:pressed\n"
"{\n"
"    border: 1px solid #3A3939;\n"
"    background-color: #3d8ec9;\n"
"    color: black;\n"
"    margin-bottom:-1px;\n"
"    padding-bottom:1px;\n"
"}\n"
"\n"
"QMenu\n"
"{\n"
"    border: 1px solid #3A3939;\n"
"    color: silver;\n"
"    margin: 1px;\n"
"}\n"
"\n"
"QMenu::icon\n"
"{\n"
"    margin: 1px;\n"
"}\n"
"\n"
"QMenu::item\n"
"{\n"
"    padding: 2px 2px 2px 25px;\n"
"    margin-left: 5px;\n"
"    border: 1px solid transparent; /* reserve space for selection border */\n"
"}\n"
"\n"
"QMenu::item:selected\n"
"{\n"
"    color: black;\n"
"}\n"
"\n"
"QMenu::separator {\n"
"    height: 2px;\n"
"    background: lightblue;\n"
"    margin-left: 10px;\n"
"    margin-right: 5px;\n"
"}\n"
"\n"
"QMenu::indicator {\n"
"    width: 16px;\n"
"    height: 16px;\n"
"}\n"
"\n"
"/* non-exclusive indicator = check box style indicator\n"
"   (see QActionGroup::setExclusive) */\n"
"QMenu::indicator:non-exclusive:unchecked {\n"
"    image: url(:/dark_blue/img/checkbox_unchecked.png);\n"
"}\n"
"\n"
"QMenu::indicator:non-exclusive:unchecked:selected {\n"
"    image: url(:/dark_blue/img/checkbox_unchecked_disabled.png);\n"
"}\n"
"\n"
"QMenu::indicator:non-exclusive:checked {\n"
"    image: url(:/dark_blue/img/checkbox_checked.png);\n"
"}\n"
"\n"
"QMenu::indicator:non-exclusive:checked:selected {\n"
"    image: url(:/dark_blue/img/checkbox_checked_disabled.png);\n"
"}\n"
"\n"
"/* exclusive indicator = radio button style indicator (see QActionGroup::setExclusive) */\n"
"QMenu::indicator:exclusive:unchecked {\n"
"    image: url(:/dark_blue/img/radio_unchecked.png);\n"
"}\n"
"\n"
"QMenu::indicator:exclusive:unchecked:selected {\n"
"    image: url(:/dark_blue/img/radio_unchecked_disabled.png);\n"
"}\n"
"\n"
"QMenu::indicator:exclusive:checked {\n"
"    image: url(:/dark_blue/img/radio_checked.png);\n"
"}\n"
"\n"
"QMenu::indicator:exclusive:checked:selected {\n"
"    image: url(:/dark_blue/img/radio_checked_disabled.png);\n"
"}\n"
"\n"
"QMenu::right-arrow {\n"
"    margin: 5px;\n"
"    image: url(:/dark_blue/img/right_arrow.png)\n"
"}\n"
"\n"
"\n"
"QWidget:disabled\n"
"{\n"
"    color: #808080;\n"
"    background-color: #302F2F;\n"
"}\n"
"\n"
"QAbstractItemView\n"
"{\n"
"    alternate-background-color: #3A3939;\n"
"    color: silver;\n"
"    border: 1px solid 3A3939;\n"
"    border-radius: 2px;\n"
"    padding: 1px;\n"
"}\n"
"\n"
"QWidget:focus, QMenuBar:focus\n"
"{\n"
"    border: 1px solid #78879b;\n"
"}\n"
"\n"
"QTabWidget:focus, QCheckBox:focus, QRadioButton:focus, QSlider:focus\n"
"{\n"
"    border: none;\n"
"}\n"
"\n"
"QLineEdit\n"
"{\n"
"    background-color: #201F1F;\n"
"    padding: 2px;\n"
"    border-style: solid;\n"
"    border: 1px solid #3A3939;\n"
"    border-radius: 2px;\n"
"    color: silver;\n"
"}\n"
"\n"
"QGroupBox {\n"
"    border:1px solid #3A3939;\n"
"    border-radius: 2px;\n"
"    margin-top: 20px;\n"
"    background-color: #302F2F;\n"
"    color: silver;\n"
"}\n"
"\n"
"QGroupBox::title {\n"
"    subcontrol-origin: margin;\n"
"    subcontrol-position: top center;\n"
"    padding-left: 10px;\n"
"    padding-right: 10px;\n"
"    padding-top: 10px;\n"
"}\n"
"\n"
"QAbstractScrollArea\n"
"{\n"
"    border-radius: 2px;\n"
"    border: 1px solid #3A3939;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QScrollBar:horizontal\n"
"{\n"
"    height: 15px;\n"
"    margin: 3px 15px 3px 15px;\n"
"    border: 1px transparent #2A2929;\n"
"    border-radius: 4px;\n"
"    background-color: #2A2929;\n"
"}\n"
"\n"
"QScrollBar::handle:horizontal\n"
"{\n"
"    background-color: #605F5F;\n"
"    min-width: 5px;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal\n"
"{\n"
"    margin: 0px 3px 0px 3px;\n"
"    border-image: url(:/dark_blue/img/right_arrow_disabled.png);\n"
"    width: 10px;\n"
"    height: 10px;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal\n"
"{\n"
"    margin: 0px 3px 0px 3px;\n"
"    border-image: url(:/dark_blue/img/left_arrow_disabled.png);\n"
"    height: 10px;\n"
"    width: 10px;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:horizontal:hover,QScrollBar::add-line:horizontal:on\n"
"{\n"
"    border-image: url(:/dark_blue/img/right_arrow.png);\n"
"    height: 10px;\n"
"    width: 10px;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"\n"
"QScrollBar::sub-line:horizontal:hover, QScrollBar::sub-line:horizontal:on\n"
"{\n"
"    border-image: url(:/dark_blue/img/left_arrow.png);\n"
"    height: 10px;\n"
"    width: 10px;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal\n"
"{\n"
"    background: none;\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal\n"
"{\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar:vertical\n"
"{\n"
"    background-color: #2A2929;\n"
"    width: 15px;\n"
"    margin: 15px 3px 15px 3px;\n"
"    border: 1px transparent #2A2929;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical\n"
"{\n"
"    background-color: #605F5F;\n"
"    min-height: 5px;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical\n"
"{\n"
"    margin: 3px 0px 3px 0px;\n"
"    border-image: url(:/dark_blue/img/up_arrow_disabled.png);\n"
"    height: 10px;\n"
"    width: 10px;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical\n"
"{\n"
"    margin: 3px 0px 3px 0px;\n"
"    border-image: url(:/dark_blue/img/down_arrow_disabled.png);\n"
"    height: 10px;\n"
"    width: 10px;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover,QScrollBar::sub-line:vertical:on\n"
"{\n"
"\n"
"    border-image: url(:/dark_blue/img/up_arrow.png);\n"
"    height: 10px;\n"
"    width: 10px;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:vertical:hover, QScrollBar::add-line:vertical:on\n"
"{\n"
"    border-image: url(:/dark_blue/img/down_arrow.png);\n"
"    height: 10px;\n"
"    width: 10px;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical\n"
"{\n"
"    background: none;\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical\n"
"{\n"
"    background: none;\n"
"}\n"
"\n"
"QTextEdit\n"
"{\n"
"    background-color: #201F1F;\n"
"    color: silver;\n"
"    border: 1px solid #3A3939;\n"
"}\n"
"\n"
"QPlainTextEdit\n"
"{\n"
"    background-color: #201F1F;;\n"
"    color: silver;\n"
"    border-radius: 2px;\n"
"    border: 1px solid #3A3939;\n"
"}\n"
"\n"
"QHeaderView::section\n"
"{\n"
"    background-color: #3A3939;\n"
"    color: silver;\n"
"    padding-left: 4px;\n"
"    border: 1px solid #6c6c6c;\n"
"}\n"
"\n"
"QSizeGrip {\n"
"    image: url(:/dark_blue/img/sizegrip.png);\n"
"    width: 12px;\n"
"    height: 12px;\n"
"}\n"
"\n"
"QMainWindow\n"
"{\n"
"    background-color: #302F2F;\n"
"\n"
"}\n"
"\n"
"QMainWindow::separator\n"
"{\n"
"    background-color: #302F2F;\n"
"    color: white;\n"
"    padding-left: 4px;\n"
"    spacing: 2px;\n"
"    border: 1px dashed #3A3939;\n"
"}\n"
"\n"
"QMainWindow::separator:hover\n"
"{\n"
"\n"
"    background-color: #787876;\n"
"    color: white;\n"
"    padding-left: 4px;\n"
"    border: 1px solid #3A3939;\n"
"    spacing: 2px;\n"
"}\n"
"\n"
"\n"
"QMenu::separator\n"
"{\n"
"    height: 1px;\n"
"    background-color: #3A3939;\n"
"    color: white;\n"
"    padding-left: 4px;\n"
"    margin-left: 10px;\n"
"    margin-right: 5px;\n"
"}\n"
"\n"
"\n"
"QFrame\n"
"{\n"
"    border-radius: 2px;\n"
"    border: 1px solid #444;\n"
"}\n"
"\n"
"QFrame[frameShape=\"0\"]\n"
"{\n"
"    border-radius: 2px;\n"
"    border: 1px transparent #444;\n"
"}\n"
"\n"
"QStackedWidget\n"
"{\n"
"    background-color: #302F2F;\n"
"    border: 1px transparent black;\n"
"}\n"
"\n"
"QToolBar {\n"
"    border: 1px transparent #393838;\n"
"    background: 1px solid #302F2F;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QToolBar::handle:horizontal {\n"
"    image: url(:/dark_blue/img/Hmovetoolbar.png);\n"
"}\n"
"QToolBar::handle:vertical {\n"
"    image: url(:/dark_blue/img/Vmovetoolbar.png);\n"
"}\n"
"QToolBar::separator:horizontal {\n"
"    image: url(:/dark_blue/img/Hsepartoolbar.png);\n"
"}\n"
"QToolBar::separator:vertical {\n"
"    image: url(:/dark_blue/img/Vsepartoolbars.png);\n"
"}\n"
"\n"
"QPushButton\n"
"{\n"
"    color: silver;\n"
"    background-color: #302F2F;\n"
"    border-width: 2px;\n"
"    border-color: #4A4949;\n"
"    border-style: solid;\n"
"    padding-top: 2px;\n"
"    padding-bottom: 2px;\n"
"    padding-left: 10px;\n"
"    padding-right: 10px;\n"
"    border-radius: 4px;\n"
"    /* outline: none; */\n"
"    /* min-width: 40px; */\n"
"}\n"
"\n"
"QPushButton:disabled\n"
"{\n"
"    background-color: #302F2F;\n"
"    border-width: 2px;\n"
"    border-color: #3A3939;\n"
"    border-style: solid;\n"
"    padding-top: 2px;\n"
"    padding-bottom: 2px;\n"
"    padding-left: 10px;\n"
"    padding-right: 10px;\n"
"    /*border-radius: 2px;*/\n"
"    color: #808080;\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    background-color: #3d8ec9;\n"
"    color: white;\n"
"}\n"
"\n"
"\n"
"\n"
"QPushButton:checked{\n"
"    background-color: #4A4949;\n"
"    border-color: #6A6969;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    border: 2px solid #78879b;\n"
"    color: silver;\n"
"}\n"
"\n"
" QAbstractSpinBox:hover,QLineEdit:hover,QTextEdit:hover,QPlainTextEdit:hover,QAbstractView:hover,QTreeView:hover\n"
"{\n"
"    border: 1px solid #78879b;\n"
"    color: silver;\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: #484846;\n"
"}\n"
"\n"
"QAbstractSpinBox {\n"
"    padding-top: 2px;\n"
"    padding-bottom: 2px;\n"
"    border: 1px solid #3A3939;\n"
"    background-color: #201F1F;\n"
"    color: silver;\n"
"    border-radius: 2px;\n"
"    min-width: 75px;\n"
"}\n"
"\n"
"QAbstractSpinBox:up-button\n"
"{\n"
"    background-color: transparent;\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"}\n"
"\n"
"QAbstractSpinBox:down-button\n"
"{\n"
"    background-color: transparent;\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"}\n"
"\n"
"QAbstractSpinBox::up-arrow,QAbstractSpinBox::up-arrow:disabled,QAbstractSpinBox::up-arrow:off {\n"
"    image: url(:/dark_blue/img/up_arrow_disabled.png);\n"
"    width: 10px;\n"
"    height: 10px;\n"
"}\n"
"QAbstractSpinBox::up-arrow:hover\n"
"{\n"
"    image: url(:/dark_blue/img/up_arrow.png);\n"
"}\n"
"\n"
"\n"
"QAbstractSpinBox::down-arrow,QAbstractSpinBox::down-arrow:disabled,QAbstractSpinBox::down-arrow:off\n"
"{\n"
"    image: url(:/dark_blue/img/down_arrow_disabled.png);\n"
"    width: 10px;\n"
"    height: 10px;\n"
"}\n"
"QAbstractSpinBox::down-arrow:hover\n"
"{\n"
"    image: url(:/dark_blue/img/down_arrow.png);\n"
"}\n"
"\n"
"\n"
"QLabel\n"
"{\n"
"    border: 0px solid black;\n"
"}\n"
"\n"
"QTabWidget{\n"
"    border: 1px transparent black;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: 1px solid #444;\n"
"    border-radius: 3px;\n"
"    padding: 3px;\n"
"}\n"
"\n"
"QTabBar\n"
"{\n"
"    qproperty-drawBase: 0;\n"
"    left: 5px; /* move to the right by 5px */\n"
"}\n"
"\n"
"QTabBar:focus\n"
"{\n"
"    border: 0px transparent black;\n"
"}\n"
"\n"
"QTabBar::close-button  {\n"
"    image: url(:/dark_blue/img/close.png);\n"
"    background: transparent;\n"
"}\n"
"\n"
"QTabBar::close-button:hover\n"
"{\n"
"    image: url(:/dark_blue/img/close-hover.png);\n"
"    background: transparent;\n"
"}\n"
"\n"
"QTabBar::close-button:pressed {\n"
"    image: url(:/dark_blue/img/close-pressed.png);\n"
"    background: transparent;\n"
"}\n"
"\n"
"/* TOP TABS */\n"
"QTabBar::tab:top {\n"
"    color: #b1b1b1;\n"
"    border: 1px solid #4A4949;\n"
"    border-bottom: 1px transparent black;\n"
"    background-color: #302F2F;\n"
"    padding: 5px;\n"
"    border-top-left-radius: 2px;\n"
"    border-top-right-radius: 2px;\n"
"}\n"
"\n"
"QTabBar::tab:top:!selected\n"
"{\n"
"    color: #b1b1b1;\n"
"    background-color: #201F1F;\n"
"    border: 1px transparent #4A4949;\n"
"    border-bottom: 1px transparent #4A4949;\n"
"    border-top-left-radius: 0px;\n"
"    border-top-right-radius: 0px;\n"
"}\n"
"\n"
"QTabBar::tab:top:!selected:hover {\n"
"    background-color: #48576b;\n"
"}\n"
"\n"
"/* BOTTOM TABS */\n"
"QTabBar::tab:bottom {\n"
"    color: #b1b1b1;\n"
"    border: 1px solid #4A4949;\n"
"    border-top: 1px transparent black;\n"
"    background-color: #302F2F;\n"
"    padding: 5px;\n"
"    border-bottom-left-radius: 2px;\n"
"    border-bottom-right-radius: 2px;\n"
"}\n"
"\n"
"QTabBar::tab:bottom:!selected\n"
"{\n"
"    color: #b1b1b1;\n"
"    background-color: #201F1F;\n"
"    border: 1px transparent #4A4949;\n"
"    border-top: 1px transparent #4A4949;\n"
"    border-bottom-left-radius: 0px;\n"
"    border-bottom-right-radius: 0px;\n"
"}\n"
"\n"
"QTabBar::tab:bottom:!selected:hover {\n"
"    background-color: #78879b;\n"
"}\n"
"\n"
"/* LEFT TABS */\n"
"QTabBar::tab:left {\n"
"    color: #b1b1b1;\n"
"    border: 1px solid #4A4949;\n"
"    border-left: 1px transparent black;\n"
"    background-color: #302F2F;\n"
"    padding: 5px;\n"
"    border-top-right-radius: 2px;\n"
"    border-bottom-right-radius: 2px;\n"
"}\n"
"\n"
"QTabBar::tab:left:!selected\n"
"{\n"
"    color: #b1b1b1;\n"
"    background-color: #201F1F;\n"
"    border: 1px transparent #4A4949;\n"
"    border-right: 1px transparent #4A4949;\n"
"    border-top-right-radius: 0px;\n"
"    border-bottom-right-radius: 0px;\n"
"}\n"
"\n"
"QTabBar::tab:left:!selected:hover {\n"
"    background-color: #48576b;\n"
"}\n"
"\n"
"\n"
"/* RIGHT TABS */\n"
"QTabBar::tab:right {\n"
"    color: #b1b1b1;\n"
"    border: 1px solid #4A4949;\n"
"    border-right: 1px transparent black;\n"
"    background-color: #302F2F;\n"
"    padding: 5px;\n"
"    border-top-left-radius: 2px;\n"
"    border-bottom-left-radius: 2px;\n"
"}\n"
"\n"
"QTabBar::tab:right:!selected\n"
"{\n"
"    color: #b1b1b1;\n"
"    background-color: #201F1F;\n"
"    border: 1px transparent #4A4949;\n"
"    border-right: 1px transparent #4A4949;\n"
"    border-top-left-radius: 0px;\n"
"    border-bottom-left-radius: 0px;\n"
"}\n"
"\n"
"QTabBar::tab:right:!selected:hover {\n"
"    background-color: #48576b;\n"
"}\n"
"\n"
"QTabBar QToolButton::right-arrow:enabled {\n"
"     image: url(:/dark_blue/img/right_arrow.png);\n"
" }\n"
"\n"
" QTabBar QToolButton::left-arrow:enabled {\n"
"     image: url(:/dark_blue/img/left_arrow.png);\n"
" }\n"
"\n"
"QTabBar QToolButton::right-arrow:disabled {\n"
"     image: url(:/dark_blue/img/right_arrow_disabled.png);\n"
" }\n"
"\n"
" QTabBar QToolButton::left-arrow:disabled {\n"
"     image: url(:/dark_blue/img/left_arrow_disabled.png);\n"
" }\n"
"\n"
"\n"
"QDockWidget {\n"
"    border: 1px solid #403F3F;\n"
"    titlebar-close-icon: url(:/dark_blue/img/close.png);\n"
"    titlebar-normal-icon: url(:/dark_blue/img/undock.png);\n"
"}\n"
"\n"
"QDockWidget::close-button, QDockWidget::float-button {\n"
"    border: 1px solid transparent;\n"
"    border-radius: 2px;\n"
"    background: transparent;\n"
"}\n"
"\n"
"QDockWidget::close-button:hover, QDockWidget::float-button:hover {\n"
"    background: rgba(255, 255, 255, 10);\n"
"}\n"
"\n"
"QDockWidget::close-button:pressed, QDockWidget::float-button:pressed {\n"
"    padding: 1px -1px -1px 1px;\n"
"    background: rgba(255, 255, 255, 10);\n"
"}\n"
"\n"
"QTreeView, QListView, QTextBrowser, AtLineEdit, AtLineEdit::hover {\n"
"    border: 1px solid #444;\n"
"    background-color: silver;\n"
"    border-radius: 3px;\n"
"    margin-left: 3px;\n"
"    color: black;\n"
"}\n"
"\n"
"QTreeView:branch:selected, QTreeView:branch:hover {\n"
"    background: url(:/dark_blue/img/transparent.png);\n"
"}\n"
"\n"
"QTreeView::branch:has-siblings:!adjoins-item {\n"
"    border-image: url(:/dark_blue/img/transparent.png);\n"
"}\n"
"\n"
"QTreeView::branch:has-siblings:adjoins-item {\n"
"    border-image: url(:/dark_blue/img/transparent.png);\n"
"}\n"
"\n"
"QTreeView::branch:!has-children:!has-siblings:adjoins-item {\n"
"    border-image: url(:/dark_blue/img/transparent.png);\n"
"}\n"
"\n"
"QTreeView::branch:has-children:!has-siblings:closed,\n"
"QTreeView::branch:closed:has-children:has-siblings {\n"
"    image: url(:/dark_blue/img/branch_closed.png);\n"
"}\n"
"\n"
"QTreeView::branch:open:has-children:!has-siblings,\n"
"QTreeView::branch:open:has-children:has-siblings  {\n"
"    image: url(:/dark_blue/img/branch_open.png);\n"
"}\n"
"\n"
"QTreeView::branch:has-children:!has-siblings:closed:hover,\n"
"QTreeView::branch:closed:has-children:has-siblings:hover {\n"
"    image: url(:/dark_blue/img/branch_closed-on.png);\n"
"    }\n"
"\n"
"QTreeView::branch:open:has-children:!has-siblings:hover,\n"
"QTreeView::branch:open:has-children:has-siblings:hover  {\n"
"    image: url(:/dark_blue/img/branch_open-on.png);\n"
"    }\n"
"\n"
"QListView::item:!selected:hover, QListView::item:!selected:hover, QTreeView::item:!selected:hover  {\n"
"    background: rgba(0, 0, 0, 0);\n"
"    outline: 0;\n"
"    color: #FFFFFF\n"
"}\n"
"\n"
"QListView::item:selected:hover, QListView::item:selected:hover, QTreeView::item:selected:hover  {\n"
"    background: #3d8ec9;\n"
"    color: #FFFFFF;\n"
"}\n"
"\n"
"QSlider::groove:horizontal {\n"
"    border: 1px solid #3A3939;\n"
"    height: 8px;\n"
"    background: #201F1F;\n"
"    margin: 2px 0;\n"
"    border-radius: 2px;\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1,\n"
"      stop: 0.0 silver, stop: 0.2 #a8a8a8, stop: 1 #727272);\n"
"    border: 1px solid #3A3939;\n"
"    width: 14px;\n"
"    height: 14px;\n"
"    margin: -4px 0;\n"
"    border-radius: 2px;\n"
"}\n"
"\n"
"QSlider::groove:vertical {\n"
"    border: 1px solid #3A3939;\n"
"    width: 8px;\n"
"    background: #201F1F;\n"
"    margin: 0 0px;\n"
"    border-radius: 2px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0.0 silver,\n"
"    stop: 0.2 #a8a8a8, stop: 1 #727272);\n"
"    border: 1px solid #3A3939;\n"
"    width: 14px;\n"
"    height: 14px;\n"
"    margin: 0 -4px;\n"
"    border-radius: 2px;\n"
"}\n"
"\n"
"QToolButton {\n"
"    /*  background-color: transparent; */\n"
"    border: 2px transparent #4A4949;\n"
"    border-radius: 4px;\n"
"    background-color: dimgray;\n"
"    margin: 2px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QToolButton[popupMode=\"1\"] { /* only for MenuButtonPopup */\n"
" padding-right: 20px; /* make way for the popup button */\n"
" border: 2px transparent #4A4949;\n"
" border-radius: 4px;\n"
"}\n"
"\n"
"QToolButton[popupMode=\"2\"] { /* only for InstantPopup */\n"
" padding-right: 10px; /* make way for the popup button */\n"
" border: 2px transparent #4A4949;\n"
"}\n"
"\n"
"\n"
"QToolButton:hover, QToolButton::menu-button:hover {\n"
"    border: 2px solid #78879b;\n"
"}\n"
"\n"
"QToolButton:checked, QToolButton:pressed,\n"
"    QToolButton::menu-button:pressed {\n"
"    background-color: #4A4949;\n"
"    border: 2px solid #78879b;\n"
"}\n"
"\n"
"/* the subcontrol below is used only in the InstantPopup or DelayedPopup mode */\n"
"QToolButton::menu-indicator {\n"
"    image: url(:/dark_blue/img/down_arrow.png);\n"
"    top: -7px; left: -2px; /* shift it a bit */\n"
"}\n"
"\n"
"/* the subcontrols below are used only in the MenuButtonPopup mode */\n"
"QToolButton::menu-button {\n"
"    border: 1px transparent #4A4949;\n"
"    border-top-right-radius: 6px;\n"
"    border-bottom-right-radius: 6px;\n"
"    /* 16px width + 4px for border = 20px allocated above */\n"
"    width: 16px;\n"
"    outline: none;\n"
"}\n"
"\n"
"QToolButton::menu-arrow {\n"
"    image: url(:/dark_blue/img/down_arrow.png);\n"
"}\n"
"\n"
"QToolButton::menu-arrow:open {\n"
"    top: 1px; left: 1px; /* shift it a bit */\n"
"    border: 1px solid #3A3939;\n"
"}\n"
"\n"
"QPushButton::menu-indicator  {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: bottom right;\n"
"    left: 4px;\n"
"}\n"
"\n"
"QTableView\n"
"{\n"
"    border: 1px solid #444;\n"
"    gridline-color: #6c6c6c;\n"
"    background-color: #201F1F;\n"
"}\n"
"\n"
"\n"
"QTableView, QHeaderView\n"
"{\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"QTableView::item:pressed, QListView::item:pressed, QTreeView::item:pressed  {\n"
"    background: #78879b;\n"
"    color: #FFFFFF;\n"
"}\n"
"\n"
"QTableView::item:selected:active, QTreeView::item:selected:active, QListView::item:selected:active  {\n"
"    background: #3d8ec9;\n"
"    color: #FFFFFF;\n"
"}\n"
"\n"
"\n"
"QHeaderView\n"
"{\n"
"    border: 1px transparent;\n"
"    border-radius: 2px;\n"
"    margin: 0px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"QHeaderView::section  {\n"
"    background-color: #3A3939;\n"
"    color: silver;\n"
"    padding: 4px;\n"
"    border: 1px solid #6c6c6c;\n"
"    border-radius: 0px;\n"
"    text-align: center;\n"
"}\n"
"\n"
"QHeaderView::section::vertical::first, QHeaderView::section::vertical::only-one\n"
"{\n"
"    border-top: 1px solid #6c6c6c;\n"
"}\n"
"\n"
"QHeaderView::section::vertical\n"
"{\n"
"    border-top: transparent;\n"
"}\n"
"\n"
"QHeaderView::section::horizontal::first, QHeaderView::section::horizontal::only-one\n"
"{\n"
"    border-left: 1px solid #6c6c6c;\n"
"}\n"
"\n"
"QHeaderView::section::horizontal\n"
"{\n"
"    border-left: transparent;\n"
"}\n"
"\n"
"\n"
"QHeaderView::section:checked\n"
" {\n"
"    color: white;\n"
"    background-color: #5A5959;\n"
" }\n"
"\n"
" /* style the sort indicator */\n"
"QHeaderView::down-arrow {\n"
"    image: url(:/dark_blue/img/down_arrow.png);\n"
"}\n"
"\n"
"QHeaderView::up-arrow {\n"
"    image: url(:/dark_blue/img/up_arrow.png);\n"
"}\n"
"\n"
"\n"
"QTableCornerButton::section {\n"
"    background-color: #3A3939;\n"
"    border: 1px solid #3A3939;\n"
"    border-radius: 2px;\n"
"}\n"
"\n"
"QToolBox  {\n"
"    padding: 3px;\n"
"    border: 1px transparent black;\n"
"}\n"
"\n"
"QToolBox::tab {\n"
"    color: #b1b1b1;\n"
"    background-color: #302F2F;\n"
"    border: 1px solid #4A4949;\n"
"    border-bottom: 1px transparent #302F2F;\n"
"    border-top-left-radius: 5px;\n"
"    border-top-right-radius: 5px;\n"
"}\n"
"\n"
" QToolBox::tab:selected { /* italicize selected tabs */\n"
"    font: italic;\n"
"    background-color: #302F2F;\n"
"    border-color: #3d8ec9;\n"
" }\n"
"\n"
"QStatusBar::item {\n"
"    border: 1px solid #3A3939;\n"
"    border-radius: 2px;\n"
" }\n"
"\n"
"\n"
"QFrame[height=\"3\"], QFrame[width=\"3\"] {\n"
"    background-color: #AAA;\n"
"}\n"
"\n"
"\n"
"QSplitter::handle {\n"
"    border: 1px dashed #3A3939;\n"
"}\n"
"\n"
"QSplitter::handle:hover {\n"
"    background-color: #787876;\n"
"    border: 1px solid #3A3939;\n"
"}\n"
"\n"
"QSplitter::handle:horizontal {\n"
"    width: 1px;\n"
"}\n"
"\n"
"QSplitter::handle:vertical {\n"
"    height: 1px;\n"
"}\n"
"\n"
"QListWidget {\n"
"    background-color: silver;\n"
"    border-radius: 5px;\n"
"    margin-left: 5px;\n"
"}\n"
"\n"
"QListWidget::item {\n"
"    color: black;\n"
"}\n"
"\n"
"QMessageBox {\n"
"    messagebox-critical-icon    : url(:/dark_blue/img/critical.png);\n"
"    messagebox-information-icon    : url(:/dark_blue/img/information.png);\n"
"    messagebox-question-icon    : url(:/dark_blue/img/question.png);\n"
"    messagebox-warning-icon:    : url(:/dark_blue/img/warning.png);\n"
"}\n"
"\n"
"ColorButton::enabled {\n"
"    border-radius: 0px;\n"
"    border: 1px solid #444444;\n"
"}\n"
"\n"
"ColorButton::disabled {\n"
"    border-radius: 0px;\n"
"    border: 1px solid #AAAAAA;\n"
"}")
        MainWindow.setIconSize(QtCore.QSize(16, 16))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(20, -10, 1001, 431))
        self.groupBox.setObjectName("groupBox")
        self.layoutWidget = QtWidgets.QWidget(self.groupBox)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 20, 641, 401))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.layoutWidget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.lneName = QtWidgets.QLineEdit(self.layoutWidget)
        self.lneName.setObjectName("lneName")
        self.horizontalLayout.addWidget(self.lneName)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.layoutWidget)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.lneNumber = QtWidgets.QLineEdit(self.layoutWidget)
        self.lneNumber.setObjectName("lneNumber")
        self.horizontalLayout_2.addWidget(self.lneNumber)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_5 = QtWidgets.QLabel(self.layoutWidget)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_3.addWidget(self.label_5)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem2)
        self.rdNakit = QtWidgets.QRadioButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.rdNakit.setFont(font)
        self.rdNakit.setObjectName("rdNakit")
        self.horizontalLayout_3.addWidget(self.rdNakit)
        self.radioButton_2 = QtWidgets.QRadioButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        self.horizontalLayout_3.addWidget(self.radioButton_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_6 = QtWidgets.QLabel(self.layoutWidget)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_4.addWidget(self.label_6)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem3)
        self.cmbOdeme = QtWidgets.QComboBox(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.cmbOdeme.setFont(font)
        self.cmbOdeme.setObjectName("cmbOdeme")
        self.cmbOdeme.addItem("")
        self.cmbOdeme.addItem("")
        self.cmbOdeme.addItem("")
        self.horizontalLayout_4.addWidget(self.cmbOdeme)
        self.verticalLayout_2.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_3 = QtWidgets.QLabel(self.layoutWidget)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_5.addWidget(self.label_3)
        spacerItem4 = QtWidgets.QSpacerItem(158, 48, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem4)
        self.cmbArac = QtWidgets.QComboBox(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.cmbArac.setFont(font)
        self.cmbArac.setObjectName("cmbArac")
        self.cmbArac.addItem("")
        self.cmbArac.addItem("")
        self.cmbArac.addItem("")
        self.cmbArac.addItem("")
        self.horizontalLayout_5.addWidget(self.cmbArac)
        self.verticalLayout_2.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_7 = QtWidgets.QLabel(self.layoutWidget)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_6.addWidget(self.label_7)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem5)
        self.listWidget = QtWidgets.QListWidget(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.listWidget.setFont(font)
        self.listWidget.setStyleSheet(".QWidget {\n"
"   background-color: beige;\n"
"}\n"
"\n"
"/* Nice Windows-XP-style password character. */\n"
"QLineEdit[echoMode=\"2\"] {\n"
"    lineedit-password-character: 9679;\n"
"}\n"
"\n"
"/* We provide a min-width and min-height for push buttons\n"
"   so that they look elegant regardless of the width of the text. */\n"
"QPushButton {\n"
"    background-color: palegoldenrod;\n"
"    border-width: 2px;\n"
"    border-color: darkkhaki;\n"
"    border-style: solid;\n"
"    border-radius: 5;\n"
"    padding: 3px;\n"
"    min-width: 9ex;\n"
"    min-height: 2.5ex;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"   background-color: khaki;\n"
"}\n"
"\n"
"/* Increase the padding, so the text is shifted when the button is\n"
"   pressed. */\n"
"QPushButton:pressed {\n"
"    padding-left: 5px;\n"
"    padding-top: 5px;\n"
"    background-color: #d0d67c;\n"
"}\n"
"\n"
"QLabel, QAbstractButton {\n"
"    font: bold;\n"
"}\n"
"\n"
"/* Mark mandatory fields with a brownish color. */\n"
".mandatory {\n"
"    color: brown;\n"
"}\n"
"\n"
"/* Bold text on status bar looks awful. */\n"
"QStatusBar QLabel {\n"
"   font: normal;\n"
"}\n"
"\n"
"QStatusBar::item {\n"
"    border-width: 1;\n"
"    border-color: darkkhaki;\n"
"    border-style: solid;\n"
"    border-radius: 2;\n"
"}\n"
"\n"
"QComboBox, QLineEdit, QSpinBox, QTextEdit, QListView {\n"
"    background-color: cornsilk;\n"
"    selection-color: #0a214c; \n"
"    selection-background-color: #C19A6B;\n"
"}\n"
"\n"
"QListView {\n"
"    show-decoration-selected: 1;\n"
"}\n"
"\n"
"QListView::item:hover {\n"
"    background-color: wheat;\n"
"}\n"
"\n"
"/* We reserve 1 pixel space in padding. When we get the focus,\n"
"   we kill the padding and enlarge the border. This makes the items\n"
"   glow. */\n"
"QLineEdit, QFrame {\n"
"    border-width: 2px;\n"
"    padding: 1px;\n"
"    border-style: solid;\n"
"    border-color: darkkhaki;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/* As mentioned above, eliminate the padding and increase the border. */\n"
"QLineEdit:focus, QFrame:focus {\n"
"    border-width: 3px;\n"
"    padding: 0px;\n"
"}\n"
"\n"
"/* A QLabel is a QFrame ... */\n"
"QLabel {\n"
"    border: none;\n"
"    padding: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"/* A QToolTip is a QLabel ... */\n"
"QToolTip {\n"
"    border: 2px solid darkkhaki;\n"
"    padding: 5px;\n"
"    border-radius: 3px;\n"
"    opacity: 200;\n"
"}\n"
"\n"
"/* Nice to have the background color change when hovered. */\n"
"QRadioButton:hover, QCheckBox:hover {\n"
"    background-color: wheat;\n"
"}\n"
"\n"
"/* Force the dialog\'s buttons to follow the Windows guidelines. */\n"
"QDialogButtonBox {\n"
"    button-layout: 0;\n"
"}\n"
"")
        self.listWidget.setObjectName("listWidget")
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        self.horizontalLayout_6.addWidget(self.listWidget)
        self.verticalLayout_2.addLayout(self.horizontalLayout_6)
        self.layoutWidget1 = QtWidgets.QWidget(self.groupBox)
        self.layoutWidget1.setGeometry(QtCore.QRect(660, 30, 331, 311))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_4 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_3.addWidget(self.label_4)
        self.calendarWidget = QtWidgets.QCalendarWidget(self.layoutWidget1)
        self.calendarWidget.setObjectName("calendarWidget")
        self.verticalLayout_3.addWidget(self.calendarWidget)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 430, 1011, 261))
        self.tableWidget.setRowCount(70)
        self.tableWidget.setColumnCount(9)
        self.tableWidget.setObjectName("tableWidget")
        self.layoutWidget2 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget2.setGeometry(QtCore.QRect(1050, 30, 211, 471))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.layoutWidget2.setFont(font)
        self.layoutWidget2.setStyleSheet("/* Customize any plain widget that is a child of a QMainWindow. */\n"
"QMainWindow > .QWidget {\n"
"    background-color: gainsboro;\n"
"    background-image: url(:/images/pagefold.png);\n"
"    background-position: top right;\n"
"    background-repeat: no-repeat\n"
"}\n"
"\n"
"/* Provide a padding for the layout inside the frame. The frame\n"
"   exists only to provide a padding for the top-right image, so we\n"
"   explicitly disable the border. */\n"
"#mainFrame {\n"
"    padding-right: 30px;\n"
"    border-style: none;\n"
"    border-image: none; /* since we set a border-image below */\n"
"}\n"
"\n"
"/* mainFrame won\'t have this border-image since we have\n"
"   explicitly set it to \'none\' using a more specific selector. */\n"
"QFrame, QLineEdit, QComboBox[editable=\"true\"], QSpinBox {\n"
"    border-image: url(:/images/frame.png) 4;\n"
"    border-width: 3;\n"
"}\n"
"\n"
"QLabel {\n"
"    border: none;\n"
"    border-image: none;\n"
"    padding: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"/* Make text in message boxes selectable. */\n"
"QMessageBox {\n"
"    /* LinksAccessibleByMouse | TextSelectableByMouse */\n"
"    messagebox-text-interaction-flags: 5;\n"
"}\n"
"   \n"
"/* Set the selection colors for all widgets. */\n"
"QWidget {\n"
"    selection-color: black;\n"
"    selection-background-color: Silver;\n"
"    color: black;\n"
"}\n"
"\n"
"/* Make the entire row selected in item views. */\n"
"QAbstractItemView {\n"
"    show-decoration-selected: 1;\n"
"}\n"
"\n"
"/* Nice WindowsXP-style password character for password line edits. */\n"
"QLineEdit[echoMode=\"2\"] {\n"
"    lineedit-password-character: 9679;\n"
"}\n"
"\n"
"/* Customize tooltips. */\n"
"QToolTip {\n"
"    background-color: rgb(200,200,255);\n"
"    border-color: darkslategray;\n"
"    border-width: 1px;\n"
"    border-style: solid;\n"
"    padding: 3px;\n"
"    font: bold;\n"
"    border-radius: 3px;\n"
"    opacity: 200;\n"
"}\n"
"\n"
"/* Customize radio buttons. */\n"
"\n"
"QRadioButton {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    image: url(:/images/radiobutton_unchecked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:hover {\n"
"    image: url(:/images/radiobutton_unchecked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:pressed {\n"
"    image: url(:/images/radiobutton_unchecked_pressed.png);\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    image: url(:/images/radiobutton_checked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:hover {\n"
"    image: url(:/images/radiobutton_checked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:pressed {\n"
"    image: url(:/images/radiobutton_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize arrows. */\n"
"\n"
"*::down-arrow, *::menu-indicator {\n"
"    image: url(:/images/down_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::down-arrow:disabled, *::down-arrow:off {\n"
"   image: url(:/images/down_arrow_disabled.png);\n"
"}\n"
"\n"
"*::up-arrow {\n"
"    image: url(:/images/up_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::up-arrow:disabled, *::up-arrow:off {\n"
"   image: url(:/images/up_arrow_disabled.png);\n"
"}\n"
"\n"
"/* Customize push buttons and comboboxes. Our read-only combobox\n"
"   is very similar to a push button, so they share the same border image. */\n"
"\n"
"QPushButton {\n"
"    min-width: 4em;\n"
"}\n"
"\n"
"QPushButton, QComboBox[editable=\"false\"],\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    border-image: url(:/images/pushbutton.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:hover, QComboBox[editable=\"false\"]:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:hover, QMenuBar::item:hover {\n"
"    border-image: url(:/images/pushbutton_hover.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:pressed, QComboBox[editable=\"false\"]:on,\n"
"QComboBox[editable=\"true\"]::drop-down:on, QMenuBar::item:on {\n"
"    border-image: url(:/images/pushbutton_pressed.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"/* Customize read-only comboboxes. */\n"
"\n"
"QComboBox[editable=\"false\"] {\n"
"    padding-left: 3px;\n"
"    padding-right: 20px; /* space for the arrow */\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-left-style: solid;\n"
"    border-left-color: darkgray;\n"
"    border-left-width: 1px;\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::down-arrow {\n"
"    subcontrol-origin: content;\n"
"    subcontrol-position: center;\n"
"    position: relative;\n"
"    left: 1px; /* 1 pixel dropdown border */\n"
"}\n"
"\n"
"/* The combobox arrow is on when the popup is open. */\n"
"QComboBox[editable=\"false\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 2px;\n"
"}\n"
"\n"
"/* Customize editable comboboxes. */\n"
"\n"
"QComboBox[editable=\"true\"] {\n"
"    padding-right: 16px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 13px;\n"
"    position: absolute;\n"
"    top: 2px;\n"
"    bottom: 2px;\n"
"    right: 2px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down,\n"
"QComboBox[editable=\"true\"]::drop-down:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:on {\n"
"    border-width: 0px;  \n"
"    border-left-width: 3px; /* we need only left and center part */\n"
"}\n"
"\n"
"/* Shift the arrow when it\'s open. */\n"
"QComboBox[editable=\"true\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 1px;\n"
"}\n"
"\n"
"/* Customize check boxes. */\n"
"QCheckBox {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    image: url(:/images/checkbox_unchecked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:hover {\n"
"    image: url(:/images/checkbox_unchecked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:pressed {\n"
"    image: url(:/images/checkbox_unchecked_pressed.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    image: url(:/images/checkbox_checked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    image: url(:/images/checkbox_checked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:pressed {\n"
"    image: url(:/images/checkbox_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize the size grip. */\n"
"QSizeGrip {\n"
"    image: url(:/images/sizegrip.png);\n"
"    width: 16px;\n"
"    height: 16px;\n"
"}\n"
"\n"
"/* Customize the menu bar. */\n"
"QMenuBar {\n"
"    border-image: none;\n"
"    border-style: none;\n"
"    border-width: 1px;\n"
"    border-bottom-style: solid;\n"
"    border-bottom-color: darkslategray;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"/* Customize spin boxes. */\n"
"\n"
"QSpinBox { \n"
"    padding-right: 15px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"\n"
"    width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */\n"
"    border-image: url(:/images/spinup.png) 1;\n"
"    border-width: 1px;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover {\n"
"    border-image: url(:/images/spinup_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    border-image: url(:/images/spinup_pressed.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"\n"
"    width: 16px;\n"
"    border-image: url(:/images/spindown.png) 1;\n"
"    border-width: 1px;\n"
"    border-top-width: 0;\n"
"}\n"
"\n"
"QSpinBox::down-button:hover {\n"
"    border-image: url(:/images/spindown_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    border-image: url(:/images/spindown_pressed.png) 1;\n"
"}")
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget2)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.btnEkle = QtWidgets.QPushButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btnEkle.setFont(font)
        self.btnEkle.setStyleSheet("/* Customize any plain widget that is a child of a QMainWindow. */\n"
"QMainWindow > .QWidget {\n"
"    background-color: gainsboro;\n"
"    background-image: url(:/images/pagefold.png);\n"
"    background-position: top right;\n"
"    background-repeat: no-repeat\n"
"}\n"
"\n"
"/* Provide a padding for the layout inside the frame. The frame\n"
"   exists only to provide a padding for the top-right image, so we\n"
"   explicitly disable the border. */\n"
"#mainFrame {\n"
"    padding-right: 30px;\n"
"    border-style: none;\n"
"    border-image: none; /* since we set a border-image below */\n"
"}\n"
"\n"
"/* mainFrame won\'t have this border-image since we have\n"
"   explicitly set it to \'none\' using a more specific selector. */\n"
"QFrame, QLineEdit, QComboBox[editable=\"true\"], QSpinBox {\n"
"    border-image: url(:/images/frame.png) 4;\n"
"    border-width: 3;\n"
"}\n"
"\n"
"QLabel {\n"
"    border: none;\n"
"    border-image: none;\n"
"    padding: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"/* Make text in message boxes selectable. */\n"
"QMessageBox {\n"
"    /* LinksAccessibleByMouse | TextSelectableByMouse */\n"
"    messagebox-text-interaction-flags: 5;\n"
"}\n"
"   \n"
"/* Set the selection colors for all widgets. */\n"
"QWidget {\n"
"    selection-color: green;\n"
"    selection-background-color: Silver;\n"
"    color: green;\n"
"}\n"
"\n"
"/* Make the entire row selected in item views. */\n"
"QAbstractItemView {\n"
"    show-decoration-selected: 1;\n"
"}\n"
"\n"
"/* Nice WindowsXP-style password character for password line edits. */\n"
"QLineEdit[echoMode=\"2\"] {\n"
"    lineedit-password-character: 9679;\n"
"}\n"
"\n"
"/* Customize tooltips. */\n"
"QToolTip {\n"
"    background-color: rgb(200,200,255);\n"
"    border-color: darkslategray;\n"
"    border-width: 1px;\n"
"    border-style: solid;\n"
"    padding: 3px;\n"
"    font: bold;\n"
"    border-radius: 3px;\n"
"    opacity: 200;\n"
"}\n"
"\n"
"/* Customize radio buttons. */\n"
"\n"
"QRadioButton {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    image: url(:/images/radiobutton_unchecked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:hover {\n"
"    image: url(:/images/radiobutton_unchecked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:pressed {\n"
"    image: url(:/images/radiobutton_unchecked_pressed.png);\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    image: url(:/images/radiobutton_checked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:hover {\n"
"    image: url(:/images/radiobutton_checked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:pressed {\n"
"    image: url(:/images/radiobutton_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize arrows. */\n"
"\n"
"*::down-arrow, *::menu-indicator {\n"
"    image: url(:/images/down_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::down-arrow:disabled, *::down-arrow:off {\n"
"   image: url(:/images/down_arrow_disabled.png);\n"
"}\n"
"\n"
"*::up-arrow {\n"
"    image: url(:/images/up_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::up-arrow:disabled, *::up-arrow:off {\n"
"   image: url(:/images/up_arrow_disabled.png);\n"
"}\n"
"\n"
"/* Customize push buttons and comboboxes. Our read-only combobox\n"
"   is very similar to a push button, so they share the same border image. */\n"
"\n"
"QPushButton {\n"
"    min-width: 4em;\n"
"}\n"
"\n"
"QPushButton, QComboBox[editable=\"false\"],\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    border-image: url(:/images/pushbutton.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:hover, QComboBox[editable=\"false\"]:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:hover, QMenuBar::item:hover {\n"
"    border-image: url(:/images/pushbutton_hover.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:pressed, QComboBox[editable=\"false\"]:on,\n"
"QComboBox[editable=\"true\"]::drop-down:on, QMenuBar::item:on {\n"
"    border-image: url(:/images/pushbutton_pressed.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"/* Customize read-only comboboxes. */\n"
"\n"
"QComboBox[editable=\"false\"] {\n"
"    padding-left: 3px;\n"
"    padding-right: 20px; /* space for the arrow */\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-left-style: solid;\n"
"    border-left-color: darkgray;\n"
"    border-left-width: 1px;\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::down-arrow {\n"
"    subcontrol-origin: content;\n"
"    subcontrol-position: center;\n"
"    position: relative;\n"
"    left: 1px; /* 1 pixel dropdown border */\n"
"}\n"
"\n"
"/* The combobox arrow is on when the popup is open. */\n"
"QComboBox[editable=\"false\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 2px;\n"
"}\n"
"\n"
"/* Customize editable comboboxes. */\n"
"\n"
"QComboBox[editable=\"true\"] {\n"
"    padding-right: 16px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 13px;\n"
"    position: absolute;\n"
"    top: 2px;\n"
"    bottom: 2px;\n"
"    right: 2px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down,\n"
"QComboBox[editable=\"true\"]::drop-down:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:on {\n"
"    border-width: 0px;  \n"
"    border-left-width: 3px; /* we need only left and center part */\n"
"}\n"
"\n"
"/* Shift the arrow when it\'s open. */\n"
"QComboBox[editable=\"true\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 1px;\n"
"}\n"
"\n"
"/* Customize check boxes. */\n"
"QCheckBox {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    image: url(:/images/checkbox_unchecked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:hover {\n"
"    image: url(:/images/checkbox_unchecked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:pressed {\n"
"    image: url(:/images/checkbox_unchecked_pressed.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    image: url(:/images/checkbox_checked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    image: url(:/images/checkbox_checked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:pressed {\n"
"    image: url(:/images/checkbox_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize the size grip. */\n"
"QSizeGrip {\n"
"    image: url(:/images/sizegrip.png);\n"
"    width: 16px;\n"
"    height: 16px;\n"
"}\n"
"\n"
"/* Customize the menu bar. */\n"
"QMenuBar {\n"
"    border-image: none;\n"
"    border-style: none;\n"
"    border-width: 1px;\n"
"    border-bottom-style: solid;\n"
"    border-bottom-color: darkslategray;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"/* Customize spin boxes. */\n"
"\n"
"QSpinBox { \n"
"    padding-right: 15px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"\n"
"    width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */\n"
"    border-image: url(:/images/spinup.png) 1;\n"
"    border-width: 1px;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover {\n"
"    border-image: url(:/images/spinup_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    border-image: url(:/images/spinup_pressed.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"\n"
"    width: 16px;\n"
"    border-image: url(:/images/spindown.png) 1;\n"
"    border-width: 1px;\n"
"    border-top-width: 0;\n"
"}\n"
"\n"
"QSpinBox::down-button:hover {\n"
"    border-image: url(:/images/spindown_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    border-image: url(:/images/spindown_pressed.png) 1;\n"
"}")
        self.btnEkle.setObjectName("btnEkle")
        self.verticalLayout.addWidget(self.btnEkle)
        self.btnAra = QtWidgets.QPushButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btnAra.setFont(font)
        self.btnAra.setStyleSheet("/* Customize any plain widget that is a child of a QMainWindow. */\n"
"QMainWindow > .QWidget {\n"
"    background-color: gainsboro;\n"
"    background-image: url(:/images/pagefold.png);\n"
"    background-position: top right;\n"
"    background-repeat: no-repeat\n"
"}\n"
"\n"
"/* Provide a padding for the layout inside the frame. The frame\n"
"   exists only to provide a padding for the top-right image, so we\n"
"   explicitly disable the border. */\n"
"#mainFrame {\n"
"    padding-right: 30px;\n"
"    border-style: none;\n"
"    border-image: none; /* since we set a border-image below */\n"
"}\n"
"\n"
"/* mainFrame won\'t have this border-image since we have\n"
"   explicitly set it to \'none\' using a more specific selector. */\n"
"QFrame, QLineEdit, QComboBox[editable=\"true\"], QSpinBox {\n"
"    border-image: url(:/images/frame.png) 4;\n"
"    border-width: 3;\n"
"}\n"
"\n"
"QLabel {\n"
"    border: none;\n"
"    border-image: none;\n"
"    padding: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"/* Make text in message boxes selectable. */\n"
"QMessageBox {\n"
"    /* LinksAccessibleByMouse | TextSelectableByMouse */\n"
"    messagebox-text-interaction-flags: 5;\n"
"}\n"
"   \n"
"/* Set the selection colors for all widgets. */\n"
"QWidget {\n"
"    selection-color: green;\n"
"    selection-background-color: Silver;\n"
"    color: green;\n"
"}\n"
"\n"
"/* Make the entire row selected in item views. */\n"
"QAbstractItemView {\n"
"    show-decoration-selected: 1;\n"
"}\n"
"\n"
"/* Nice WindowsXP-style password character for password line edits. */\n"
"QLineEdit[echoMode=\"2\"] {\n"
"    lineedit-password-character: 9679;\n"
"}\n"
"\n"
"/* Customize tooltips. */\n"
"QToolTip {\n"
"    background-color: rgb(200,200,255);\n"
"    border-color: darkslategray;\n"
"    border-width: 1px;\n"
"    border-style: solid;\n"
"    padding: 3px;\n"
"    font: bold;\n"
"    border-radius: 3px;\n"
"    opacity: 200;\n"
"}\n"
"\n"
"/* Customize radio buttons. */\n"
"\n"
"QRadioButton {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    image: url(:/images/radiobutton_unchecked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:hover {\n"
"    image: url(:/images/radiobutton_unchecked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:pressed {\n"
"    image: url(:/images/radiobutton_unchecked_pressed.png);\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    image: url(:/images/radiobutton_checked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:hover {\n"
"    image: url(:/images/radiobutton_checked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:pressed {\n"
"    image: url(:/images/radiobutton_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize arrows. */\n"
"\n"
"*::down-arrow, *::menu-indicator {\n"
"    image: url(:/images/down_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::down-arrow:disabled, *::down-arrow:off {\n"
"   image: url(:/images/down_arrow_disabled.png);\n"
"}\n"
"\n"
"*::up-arrow {\n"
"    image: url(:/images/up_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::up-arrow:disabled, *::up-arrow:off {\n"
"   image: url(:/images/up_arrow_disabled.png);\n"
"}\n"
"\n"
"/* Customize push buttons and comboboxes. Our read-only combobox\n"
"   is very similar to a push button, so they share the same border image. */\n"
"\n"
"QPushButton {\n"
"    min-width: 4em;\n"
"}\n"
"\n"
"QPushButton, QComboBox[editable=\"false\"],\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    border-image: url(:/images/pushbutton.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:hover, QComboBox[editable=\"false\"]:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:hover, QMenuBar::item:hover {\n"
"    border-image: url(:/images/pushbutton_hover.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:pressed, QComboBox[editable=\"false\"]:on,\n"
"QComboBox[editable=\"true\"]::drop-down:on, QMenuBar::item:on {\n"
"    border-image: url(:/images/pushbutton_pressed.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"/* Customize read-only comboboxes. */\n"
"\n"
"QComboBox[editable=\"false\"] {\n"
"    padding-left: 3px;\n"
"    padding-right: 20px; /* space for the arrow */\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-left-style: solid;\n"
"    border-left-color: darkgray;\n"
"    border-left-width: 1px;\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::down-arrow {\n"
"    subcontrol-origin: content;\n"
"    subcontrol-position: center;\n"
"    position: relative;\n"
"    left: 1px; /* 1 pixel dropdown border */\n"
"}\n"
"\n"
"/* The combobox arrow is on when the popup is open. */\n"
"QComboBox[editable=\"false\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 2px;\n"
"}\n"
"\n"
"/* Customize editable comboboxes. */\n"
"\n"
"QComboBox[editable=\"true\"] {\n"
"    padding-right: 16px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 13px;\n"
"    position: absolute;\n"
"    top: 2px;\n"
"    bottom: 2px;\n"
"    right: 2px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down,\n"
"QComboBox[editable=\"true\"]::drop-down:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:on {\n"
"    border-width: 0px;  \n"
"    border-left-width: 3px; /* we need only left and center part */\n"
"}\n"
"\n"
"/* Shift the arrow when it\'s open. */\n"
"QComboBox[editable=\"true\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 1px;\n"
"}\n"
"\n"
"/* Customize check boxes. */\n"
"QCheckBox {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    image: url(:/images/checkbox_unchecked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:hover {\n"
"    image: url(:/images/checkbox_unchecked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:pressed {\n"
"    image: url(:/images/checkbox_unchecked_pressed.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    image: url(:/images/checkbox_checked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    image: url(:/images/checkbox_checked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:pressed {\n"
"    image: url(:/images/checkbox_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize the size grip. */\n"
"QSizeGrip {\n"
"    image: url(:/images/sizegrip.png);\n"
"    width: 16px;\n"
"    height: 16px;\n"
"}\n"
"\n"
"/* Customize the menu bar. */\n"
"QMenuBar {\n"
"    border-image: none;\n"
"    border-style: none;\n"
"    border-width: 1px;\n"
"    border-bottom-style: solid;\n"
"    border-bottom-color: darkslategray;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"/* Customize spin boxes. */\n"
"\n"
"QSpinBox { \n"
"    padding-right: 15px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"\n"
"    width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */\n"
"    border-image: url(:/images/spinup.png) 1;\n"
"    border-width: 1px;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover {\n"
"    border-image: url(:/images/spinup_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    border-image: url(:/images/spinup_pressed.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"\n"
"    width: 16px;\n"
"    border-image: url(:/images/spindown.png) 1;\n"
"    border-width: 1px;\n"
"    border-top-width: 0;\n"
"}\n"
"\n"
"QSpinBox::down-button:hover {\n"
"    border-image: url(:/images/spindown_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    border-image: url(:/images/spindown_pressed.png) 1;\n"
"}")
        self.btnAra.setObjectName("btnAra")
        self.verticalLayout.addWidget(self.btnAra)
        self.btnSil = QtWidgets.QPushButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btnSil.setFont(font)
        self.btnSil.setStyleSheet("/* Customize any plain widget that is a child of a QMainWindow. */\n"
"QMainWindow > .QWidget {\n"
"    background-color: gainsboro;\n"
"    background-image: url(:/images/pagefold.png);\n"
"    background-position: top right;\n"
"    background-repeat: no-repeat\n"
"}\n"
"\n"
"/* Provide a padding for the layout inside the frame. The frame\n"
"   exists only to provide a padding for the top-right image, so we\n"
"   explicitly disable the border. */\n"
"#mainFrame {\n"
"    padding-right: 30px;\n"
"    border-style: none;\n"
"    border-image: none; /* since we set a border-image below */\n"
"}\n"
"\n"
"/* mainFrame won\'t have this border-image since we have\n"
"   explicitly set it to \'none\' using a more specific selector. */\n"
"QFrame, QLineEdit, QComboBox[editable=\"true\"], QSpinBox {\n"
"    border-image: url(:/images/frame.png) 4;\n"
"    border-width: 3;\n"
"}\n"
"\n"
"QLabel {\n"
"    border: none;\n"
"    border-image: none;\n"
"    padding: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"/* Make text in message boxes selectable. */\n"
"QMessageBox {\n"
"    /* LinksAccessibleByMouse | TextSelectableByMouse */\n"
"    messagebox-text-interaction-flags: 5;\n"
"}\n"
"   \n"
"/* Set the selection colors for all widgets. */\n"
"QWidget {\n"
"    selection-color: green;\n"
"    selection-background-color: Silver;\n"
"    color: green;\n"
"}\n"
"\n"
"/* Make the entire row selected in item views. */\n"
"QAbstractItemView {\n"
"    show-decoration-selected: 1;\n"
"}\n"
"\n"
"/* Nice WindowsXP-style password character for password line edits. */\n"
"QLineEdit[echoMode=\"2\"] {\n"
"    lineedit-password-character: 9679;\n"
"}\n"
"\n"
"/* Customize tooltips. */\n"
"QToolTip {\n"
"    background-color: rgb(200,200,255);\n"
"    border-color: darkslategray;\n"
"    border-width: 1px;\n"
"    border-style: solid;\n"
"    padding: 3px;\n"
"    font: bold;\n"
"    border-radius: 3px;\n"
"    opacity: 200;\n"
"}\n"
"\n"
"/* Customize radio buttons. */\n"
"\n"
"QRadioButton {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    image: url(:/images/radiobutton_unchecked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:hover {\n"
"    image: url(:/images/radiobutton_unchecked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:pressed {\n"
"    image: url(:/images/radiobutton_unchecked_pressed.png);\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    image: url(:/images/radiobutton_checked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:hover {\n"
"    image: url(:/images/radiobutton_checked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:pressed {\n"
"    image: url(:/images/radiobutton_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize arrows. */\n"
"\n"
"*::down-arrow, *::menu-indicator {\n"
"    image: url(:/images/down_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::down-arrow:disabled, *::down-arrow:off {\n"
"   image: url(:/images/down_arrow_disabled.png);\n"
"}\n"
"\n"
"*::up-arrow {\n"
"    image: url(:/images/up_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::up-arrow:disabled, *::up-arrow:off {\n"
"   image: url(:/images/up_arrow_disabled.png);\n"
"}\n"
"\n"
"/* Customize push buttons and comboboxes. Our read-only combobox\n"
"   is very similar to a push button, so they share the same border image. */\n"
"\n"
"QPushButton {\n"
"    min-width: 4em;\n"
"}\n"
"\n"
"QPushButton, QComboBox[editable=\"false\"],\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    border-image: url(:/images/pushbutton.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:hover, QComboBox[editable=\"false\"]:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:hover, QMenuBar::item:hover {\n"
"    border-image: url(:/images/pushbutton_hover.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:pressed, QComboBox[editable=\"false\"]:on,\n"
"QComboBox[editable=\"true\"]::drop-down:on, QMenuBar::item:on {\n"
"    border-image: url(:/images/pushbutton_pressed.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"/* Customize read-only comboboxes. */\n"
"\n"
"QComboBox[editable=\"false\"] {\n"
"    padding-left: 3px;\n"
"    padding-right: 20px; /* space for the arrow */\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-left-style: solid;\n"
"    border-left-color: darkgray;\n"
"    border-left-width: 1px;\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::down-arrow {\n"
"    subcontrol-origin: content;\n"
"    subcontrol-position: center;\n"
"    position: relative;\n"
"    left: 1px; /* 1 pixel dropdown border */\n"
"}\n"
"\n"
"/* The combobox arrow is on when the popup is open. */\n"
"QComboBox[editable=\"false\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 2px;\n"
"}\n"
"\n"
"/* Customize editable comboboxes. */\n"
"\n"
"QComboBox[editable=\"true\"] {\n"
"    padding-right: 16px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 13px;\n"
"    position: absolute;\n"
"    top: 2px;\n"
"    bottom: 2px;\n"
"    right: 2px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down,\n"
"QComboBox[editable=\"true\"]::drop-down:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:on {\n"
"    border-width: 0px;  \n"
"    border-left-width: 3px; /* we need only left and center part */\n"
"}\n"
"\n"
"/* Shift the arrow when it\'s open. */\n"
"QComboBox[editable=\"true\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 1px;\n"
"}\n"
"\n"
"/* Customize check boxes. */\n"
"QCheckBox {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    image: url(:/images/checkbox_unchecked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:hover {\n"
"    image: url(:/images/checkbox_unchecked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:pressed {\n"
"    image: url(:/images/checkbox_unchecked_pressed.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    image: url(:/images/checkbox_checked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    image: url(:/images/checkbox_checked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:pressed {\n"
"    image: url(:/images/checkbox_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize the size grip. */\n"
"QSizeGrip {\n"
"    image: url(:/images/sizegrip.png);\n"
"    width: 16px;\n"
"    height: 16px;\n"
"}\n"
"\n"
"/* Customize the menu bar. */\n"
"QMenuBar {\n"
"    border-image: none;\n"
"    border-style: none;\n"
"    border-width: 1px;\n"
"    border-bottom-style: solid;\n"
"    border-bottom-color: darkslategray;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"/* Customize spin boxes. */\n"
"\n"
"QSpinBox { \n"
"    padding-right: 15px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"\n"
"    width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */\n"
"    border-image: url(:/images/spinup.png) 1;\n"
"    border-width: 1px;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover {\n"
"    border-image: url(:/images/spinup_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    border-image: url(:/images/spinup_pressed.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"\n"
"    width: 16px;\n"
"    border-image: url(:/images/spindown.png) 1;\n"
"    border-width: 1px;\n"
"    border-top-width: 0;\n"
"}\n"
"\n"
"QSpinBox::down-button:hover {\n"
"    border-image: url(:/images/spindown_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    border-image: url(:/images/spindown_pressed.png) 1;\n"
"}")
        self.btnSil.setObjectName("btnSil")
        self.verticalLayout.addWidget(self.btnSil)
        self.btnListele = QtWidgets.QPushButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btnListele.setFont(font)
        self.btnListele.setStyleSheet("/* Customize any plain widget that is a child of a QMainWindow. */\n"
"QMainWindow > .QWidget {\n"
"    background-color: gainsboro;\n"
"    background-image: url(:/images/pagefold.png);\n"
"    background-position: top right;\n"
"    background-repeat: no-repeat\n"
"}\n"
"\n"
"/* Provide a padding for the layout inside the frame. The frame\n"
"   exists only to provide a padding for the top-right image, so we\n"
"   explicitly disable the border. */\n"
"#mainFrame {\n"
"    padding-right: 30px;\n"
"    border-style: none;\n"
"    border-image: none; /* since we set a border-image below */\n"
"}\n"
"\n"
"/* mainFrame won\'t have this border-image since we have\n"
"   explicitly set it to \'none\' using a more specific selector. */\n"
"QFrame, QLineEdit, QComboBox[editable=\"true\"], QSpinBox {\n"
"    border-image: url(:/images/frame.png) 4;\n"
"    border-width: 3;\n"
"}\n"
"\n"
"QLabel {\n"
"    border: none;\n"
"    border-image: none;\n"
"    padding: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"/* Make text in message boxes selectable. */\n"
"QMessageBox {\n"
"    /* LinksAccessibleByMouse | TextSelectableByMouse */\n"
"    messagebox-text-interaction-flags: 5;\n"
"}\n"
"   \n"
"/* Set the selection colors for all widgets. */\n"
"QWidget {\n"
"    selection-color: green;\n"
"    selection-background-color: Silver;\n"
"    color: green;\n"
"}\n"
"\n"
"/* Make the entire row selected in item views. */\n"
"QAbstractItemView {\n"
"    show-decoration-selected: 1;\n"
"}\n"
"\n"
"/* Nice WindowsXP-style password character for password line edits. */\n"
"QLineEdit[echoMode=\"2\"] {\n"
"    lineedit-password-character: 9679;\n"
"}\n"
"\n"
"/* Customize tooltips. */\n"
"QToolTip {\n"
"    background-color: rgb(200,200,255);\n"
"    border-color: darkslategray;\n"
"    border-width: 1px;\n"
"    border-style: solid;\n"
"    padding: 3px;\n"
"    font: bold;\n"
"    border-radius: 3px;\n"
"    opacity: 200;\n"
"}\n"
"\n"
"/* Customize radio buttons. */\n"
"\n"
"QRadioButton {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    image: url(:/images/radiobutton_unchecked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:hover {\n"
"    image: url(:/images/radiobutton_unchecked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:pressed {\n"
"    image: url(:/images/radiobutton_unchecked_pressed.png);\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    image: url(:/images/radiobutton_checked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:hover {\n"
"    image: url(:/images/radiobutton_checked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:pressed {\n"
"    image: url(:/images/radiobutton_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize arrows. */\n"
"\n"
"*::down-arrow, *::menu-indicator {\n"
"    image: url(:/images/down_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::down-arrow:disabled, *::down-arrow:off {\n"
"   image: url(:/images/down_arrow_disabled.png);\n"
"}\n"
"\n"
"*::up-arrow {\n"
"    image: url(:/images/up_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::up-arrow:disabled, *::up-arrow:off {\n"
"   image: url(:/images/up_arrow_disabled.png);\n"
"}\n"
"\n"
"/* Customize push buttons and comboboxes. Our read-only combobox\n"
"   is very similar to a push button, so they share the same border image. */\n"
"\n"
"QPushButton {\n"
"    min-width: 4em;\n"
"}\n"
"\n"
"QPushButton, QComboBox[editable=\"false\"],\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    border-image: url(:/images/pushbutton.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:hover, QComboBox[editable=\"false\"]:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:hover, QMenuBar::item:hover {\n"
"    border-image: url(:/images/pushbutton_hover.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:pressed, QComboBox[editable=\"false\"]:on,\n"
"QComboBox[editable=\"true\"]::drop-down:on, QMenuBar::item:on {\n"
"    border-image: url(:/images/pushbutton_pressed.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"/* Customize read-only comboboxes. */\n"
"\n"
"QComboBox[editable=\"false\"] {\n"
"    padding-left: 3px;\n"
"    padding-right: 20px; /* space for the arrow */\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-left-style: solid;\n"
"    border-left-color: darkgray;\n"
"    border-left-width: 1px;\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::down-arrow {\n"
"    subcontrol-origin: content;\n"
"    subcontrol-position: center;\n"
"    position: relative;\n"
"    left: 1px; /* 1 pixel dropdown border */\n"
"}\n"
"\n"
"/* The combobox arrow is on when the popup is open. */\n"
"QComboBox[editable=\"false\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 2px;\n"
"}\n"
"\n"
"/* Customize editable comboboxes. */\n"
"\n"
"QComboBox[editable=\"true\"] {\n"
"    padding-right: 16px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 13px;\n"
"    position: absolute;\n"
"    top: 2px;\n"
"    bottom: 2px;\n"
"    right: 2px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down,\n"
"QComboBox[editable=\"true\"]::drop-down:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:on {\n"
"    border-width: 0px;  \n"
"    border-left-width: 3px; /* we need only left and center part */\n"
"}\n"
"\n"
"/* Shift the arrow when it\'s open. */\n"
"QComboBox[editable=\"true\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 1px;\n"
"}\n"
"\n"
"/* Customize check boxes. */\n"
"QCheckBox {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    image: url(:/images/checkbox_unchecked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:hover {\n"
"    image: url(:/images/checkbox_unchecked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:pressed {\n"
"    image: url(:/images/checkbox_unchecked_pressed.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    image: url(:/images/checkbox_checked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    image: url(:/images/checkbox_checked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:pressed {\n"
"    image: url(:/images/checkbox_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize the size grip. */\n"
"QSizeGrip {\n"
"    image: url(:/images/sizegrip.png);\n"
"    width: 16px;\n"
"    height: 16px;\n"
"}\n"
"\n"
"/* Customize the menu bar. */\n"
"QMenuBar {\n"
"    border-image: none;\n"
"    border-style: none;\n"
"    border-width: 1px;\n"
"    border-bottom-style: solid;\n"
"    border-bottom-color: darkslategray;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"/* Customize spin boxes. */\n"
"\n"
"QSpinBox { \n"
"    padding-right: 15px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"\n"
"    width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */\n"
"    border-image: url(:/images/spinup.png) 1;\n"
"    border-width: 1px;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover {\n"
"    border-image: url(:/images/spinup_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    border-image: url(:/images/spinup_pressed.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"\n"
"    width: 16px;\n"
"    border-image: url(:/images/spindown.png) 1;\n"
"    border-width: 1px;\n"
"    border-top-width: 0;\n"
"}\n"
"\n"
"QSpinBox::down-button:hover {\n"
"    border-image: url(:/images/spindown_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    border-image: url(:/images/spindown_pressed.png) 1;\n"
"}")
        self.btnListele.setObjectName("btnListele")
        self.verticalLayout.addWidget(self.btnListele)
        self.btnGuncelle = QtWidgets.QPushButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btnGuncelle.setFont(font)
        self.btnGuncelle.setStyleSheet("/* Customize any plain widget that is a child of a QMainWindow. */\n"
"QMainWindow > .QWidget {\n"
"    background-color: gainsboro;\n"
"    background-image: url(:/images/pagefold.png);\n"
"    background-position: top right;\n"
"    background-repeat: no-repeat\n"
"}\n"
"\n"
"/* Provide a padding for the layout inside the frame. The frame\n"
"   exists only to provide a padding for the top-right image, so we\n"
"   explicitly disable the border. */\n"
"#mainFrame {\n"
"    padding-right: 30px;\n"
"    border-style: none;\n"
"    border-image: none; /* since we set a border-image below */\n"
"}\n"
"\n"
"/* mainFrame won\'t have this border-image since we have\n"
"   explicitly set it to \'none\' using a more specific selector. */\n"
"QFrame, QLineEdit, QComboBox[editable=\"true\"], QSpinBox {\n"
"    border-image: url(:/images/frame.png) 4;\n"
"    border-width: 3;\n"
"}\n"
"\n"
"QLabel {\n"
"    border: none;\n"
"    border-image: none;\n"
"    padding: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"/* Make text in message boxes selectable. */\n"
"QMessageBox {\n"
"    /* LinksAccessibleByMouse | TextSelectableByMouse */\n"
"    messagebox-text-interaction-flags: 5;\n"
"}\n"
"   \n"
"/* Set the selection colors for all widgets. */\n"
"QWidget {\n"
"    selection-color: green;\n"
"    selection-background-color: Silver;\n"
"    color: green;\n"
"}\n"
"\n"
"/* Make the entire row selected in item views. */\n"
"QAbstractItemView {\n"
"    show-decoration-selected: 1;\n"
"}\n"
"\n"
"/* Nice WindowsXP-style password character for password line edits. */\n"
"QLineEdit[echoMode=\"2\"] {\n"
"    lineedit-password-character: 9679;\n"
"}\n"
"\n"
"/* Customize tooltips. */\n"
"QToolTip {\n"
"    background-color: rgb(200,200,255);\n"
"    border-color: darkslategray;\n"
"    border-width: 1px;\n"
"    border-style: solid;\n"
"    padding: 3px;\n"
"    font: bold;\n"
"    border-radius: 3px;\n"
"    opacity: 200;\n"
"}\n"
"\n"
"/* Customize radio buttons. */\n"
"\n"
"QRadioButton {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    image: url(:/images/radiobutton_unchecked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:hover {\n"
"    image: url(:/images/radiobutton_unchecked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:pressed {\n"
"    image: url(:/images/radiobutton_unchecked_pressed.png);\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    image: url(:/images/radiobutton_checked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:hover {\n"
"    image: url(:/images/radiobutton_checked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:pressed {\n"
"    image: url(:/images/radiobutton_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize arrows. */\n"
"\n"
"*::down-arrow, *::menu-indicator {\n"
"    image: url(:/images/down_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::down-arrow:disabled, *::down-arrow:off {\n"
"   image: url(:/images/down_arrow_disabled.png);\n"
"}\n"
"\n"
"*::up-arrow {\n"
"    image: url(:/images/up_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::up-arrow:disabled, *::up-arrow:off {\n"
"   image: url(:/images/up_arrow_disabled.png);\n"
"}\n"
"\n"
"/* Customize push buttons and comboboxes. Our read-only combobox\n"
"   is very similar to a push button, so they share the same border image. */\n"
"\n"
"QPushButton {\n"
"    min-width: 4em;\n"
"}\n"
"\n"
"QPushButton, QComboBox[editable=\"false\"],\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    border-image: url(:/images/pushbutton.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:hover, QComboBox[editable=\"false\"]:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:hover, QMenuBar::item:hover {\n"
"    border-image: url(:/images/pushbutton_hover.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:pressed, QComboBox[editable=\"false\"]:on,\n"
"QComboBox[editable=\"true\"]::drop-down:on, QMenuBar::item:on {\n"
"    border-image: url(:/images/pushbutton_pressed.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"/* Customize read-only comboboxes. */\n"
"\n"
"QComboBox[editable=\"false\"] {\n"
"    padding-left: 3px;\n"
"    padding-right: 20px; /* space for the arrow */\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-left-style: solid;\n"
"    border-left-color: darkgray;\n"
"    border-left-width: 1px;\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::down-arrow {\n"
"    subcontrol-origin: content;\n"
"    subcontrol-position: center;\n"
"    position: relative;\n"
"    left: 1px; /* 1 pixel dropdown border */\n"
"}\n"
"\n"
"/* The combobox arrow is on when the popup is open. */\n"
"QComboBox[editable=\"false\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 2px;\n"
"}\n"
"\n"
"/* Customize editable comboboxes. */\n"
"\n"
"QComboBox[editable=\"true\"] {\n"
"    padding-right: 16px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 13px;\n"
"    position: absolute;\n"
"    top: 2px;\n"
"    bottom: 2px;\n"
"    right: 2px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down,\n"
"QComboBox[editable=\"true\"]::drop-down:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:on {\n"
"    border-width: 0px;  \n"
"    border-left-width: 3px; /* we need only left and center part */\n"
"}\n"
"\n"
"/* Shift the arrow when it\'s open. */\n"
"QComboBox[editable=\"true\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 1px;\n"
"}\n"
"\n"
"/* Customize check boxes. */\n"
"QCheckBox {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    image: url(:/images/checkbox_unchecked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:hover {\n"
"    image: url(:/images/checkbox_unchecked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:pressed {\n"
"    image: url(:/images/checkbox_unchecked_pressed.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    image: url(:/images/checkbox_checked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    image: url(:/images/checkbox_checked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:pressed {\n"
"    image: url(:/images/checkbox_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize the size grip. */\n"
"QSizeGrip {\n"
"    image: url(:/images/sizegrip.png);\n"
"    width: 16px;\n"
"    height: 16px;\n"
"}\n"
"\n"
"/* Customize the menu bar. */\n"
"QMenuBar {\n"
"    border-image: none;\n"
"    border-style: none;\n"
"    border-width: 1px;\n"
"    border-bottom-style: solid;\n"
"    border-bottom-color: darkslategray;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"/* Customize spin boxes. */\n"
"\n"
"QSpinBox { \n"
"    padding-right: 15px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"\n"
"    width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */\n"
"    border-image: url(:/images/spinup.png) 1;\n"
"    border-width: 1px;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover {\n"
"    border-image: url(:/images/spinup_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    border-image: url(:/images/spinup_pressed.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"\n"
"    width: 16px;\n"
"    border-image: url(:/images/spindown.png) 1;\n"
"    border-width: 1px;\n"
"    border-top-width: 0;\n"
"}\n"
"\n"
"QSpinBox::down-button:hover {\n"
"    border-image: url(:/images/spindown_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    border-image: url(:/images/spindown_pressed.png) 1;\n"
"}")
        self.btnGuncelle.setObjectName("btnGuncelle")
        self.verticalLayout.addWidget(self.btnGuncelle)
        self.btnCikis = QtWidgets.QPushButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btnCikis.setFont(font)
        self.btnCikis.setStyleSheet("/* Customize any plain widget that is a child of a QMainWindow. */\n"
"QMainWindow > .QWidget {\n"
"    background-color: gainsboro;\n"
"    background-image: url(:/images/pagefold.png);\n"
"    background-position: top right;\n"
"    background-repeat: no-repeat\n"
"}\n"
"\n"
"/* Provide a padding for the layout inside the frame. The frame\n"
"   exists only to provide a padding for the top-right image, so we\n"
"   explicitly disable the border. */\n"
"#mainFrame {\n"
"    padding-right: 30px;\n"
"    border-style: none;\n"
"    border-image: none; /* since we set a border-image below */\n"
"}\n"
"\n"
"/* mainFrame won\'t have this border-image since we have\n"
"   explicitly set it to \'none\' using a more specific selector. */\n"
"QFrame, QLineEdit, QComboBox[editable=\"true\"], QSpinBox {\n"
"    border-image: url(:/images/frame.png) 4;\n"
"    border-width: 3;\n"
"}\n"
"\n"
"QLabel {\n"
"    border: none;\n"
"    border-image: none;\n"
"    padding: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"/* Make text in message boxes selectable. */\n"
"QMessageBox {\n"
"    /* LinksAccessibleByMouse | TextSelectableByMouse */\n"
"    messagebox-text-interaction-flags: 5;\n"
"}\n"
"   \n"
"/* Set the selection colors for all widgets. */\n"
"QWidget {\n"
"    selection-color: green;\n"
"    selection-background-color: Silver;\n"
"    color: green;\n"
"}\n"
"\n"
"/* Make the entire row selected in item views. */\n"
"QAbstractItemView {\n"
"    show-decoration-selected: 1;\n"
"}\n"
"\n"
"/* Nice WindowsXP-style password character for password line edits. */\n"
"QLineEdit[echoMode=\"2\"] {\n"
"    lineedit-password-character: 9679;\n"
"}\n"
"\n"
"/* Customize tooltips. */\n"
"QToolTip {\n"
"    background-color: rgb(200,200,255);\n"
"    border-color: darkslategray;\n"
"    border-width: 1px;\n"
"    border-style: solid;\n"
"    padding: 3px;\n"
"    font: bold;\n"
"    border-radius: 3px;\n"
"    opacity: 200;\n"
"}\n"
"\n"
"/* Customize radio buttons. */\n"
"\n"
"QRadioButton {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    image: url(:/images/radiobutton_unchecked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:hover {\n"
"    image: url(:/images/radiobutton_unchecked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked:pressed {\n"
"    image: url(:/images/radiobutton_unchecked_pressed.png);\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    image: url(:/images/radiobutton_checked.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:hover {\n"
"    image: url(:/images/radiobutton_checked_hover.png);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:pressed {\n"
"    image: url(:/images/radiobutton_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize arrows. */\n"
"\n"
"*::down-arrow, *::menu-indicator {\n"
"    image: url(:/images/down_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::down-arrow:disabled, *::down-arrow:off {\n"
"   image: url(:/images/down_arrow_disabled.png);\n"
"}\n"
"\n"
"*::up-arrow {\n"
"    image: url(:/images/up_arrow.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"}\n"
"\n"
"*::up-arrow:disabled, *::up-arrow:off {\n"
"   image: url(:/images/up_arrow_disabled.png);\n"
"}\n"
"\n"
"/* Customize push buttons and comboboxes. Our read-only combobox\n"
"   is very similar to a push button, so they share the same border image. */\n"
"\n"
"QPushButton {\n"
"    min-width: 4em;\n"
"}\n"
"\n"
"QPushButton, QComboBox[editable=\"false\"],\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    border-image: url(:/images/pushbutton.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:hover, QComboBox[editable=\"false\"]:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:hover, QMenuBar::item:hover {\n"
"    border-image: url(:/images/pushbutton_hover.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"QPushButton:pressed, QComboBox[editable=\"false\"]:on,\n"
"QComboBox[editable=\"true\"]::drop-down:on, QMenuBar::item:on {\n"
"    border-image: url(:/images/pushbutton_pressed.png) 5;\n"
"    border-width: 5;\n"
"}\n"
"\n"
"/* Customize read-only comboboxes. */\n"
"\n"
"QComboBox[editable=\"false\"] {\n"
"    padding-left: 3px;\n"
"    padding-right: 20px; /* space for the arrow */\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-left-style: solid;\n"
"    border-left-color: darkgray;\n"
"    border-left-width: 1px;\n"
"}\n"
"\n"
"QComboBox[editable=\"false\"]::down-arrow {\n"
"    subcontrol-origin: content;\n"
"    subcontrol-position: center;\n"
"    position: relative;\n"
"    left: 1px; /* 1 pixel dropdown border */\n"
"}\n"
"\n"
"/* The combobox arrow is on when the popup is open. */\n"
"QComboBox[editable=\"false\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 2px;\n"
"}\n"
"\n"
"/* Customize editable comboboxes. */\n"
"\n"
"QComboBox[editable=\"true\"] {\n"
"    padding-right: 16px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 13px;\n"
"    position: absolute;\n"
"    top: 2px;\n"
"    bottom: 2px;\n"
"    right: 2px;\n"
"}\n"
"\n"
"QComboBox[editable=\"true\"]::drop-down,\n"
"QComboBox[editable=\"true\"]::drop-down:hover,\n"
"QComboBox[editable=\"true\"]::drop-down:on {\n"
"    border-width: 0px;  \n"
"    border-left-width: 3px; /* we need only left and center part */\n"
"}\n"
"\n"
"/* Shift the arrow when it\'s open. */\n"
"QComboBox[editable=\"true\"]::down-arrow:on {\n"
"    position: relative;\n"
"    top: 1px;\n"
"    left: 1px;\n"
"}\n"
"\n"
"/* Customize check boxes. */\n"
"QCheckBox {\n"
"    spacing: 5px;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 13px;\n"
"    height: 13px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    image: url(:/images/checkbox_unchecked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:hover {\n"
"    image: url(:/images/checkbox_unchecked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:pressed {\n"
"    image: url(:/images/checkbox_unchecked_pressed.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    image: url(:/images/checkbox_checked.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:hover {\n"
"    image: url(:/images/checkbox_checked_hover.png);\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:pressed {\n"
"    image: url(:/images/checkbox_checked_pressed.png);\n"
"}\n"
"\n"
"/* Customize the size grip. */\n"
"QSizeGrip {\n"
"    image: url(:/images/sizegrip.png);\n"
"    width: 16px;\n"
"    height: 16px;\n"
"}\n"
"\n"
"/* Customize the menu bar. */\n"
"QMenuBar {\n"
"    border-image: none;\n"
"    border-style: none;\n"
"    border-width: 1px;\n"
"    border-bottom-style: solid;\n"
"    border-bottom-color: darkslategray;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"/* Customize spin boxes. */\n"
"\n"
"QSpinBox { \n"
"    padding-right: 15px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"\n"
"    width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */\n"
"    border-image: url(:/images/spinup.png) 1;\n"
"    border-width: 1px;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover {\n"
"    border-image: url(:/images/spinup_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    border-image: url(:/images/spinup_pressed.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"\n"
"    width: 16px;\n"
"    border-image: url(:/images/spindown.png) 1;\n"
"    border-width: 1px;\n"
"    border-top-width: 0;\n"
"}\n"
"\n"
"QSpinBox::down-button:hover {\n"
"    border-image: url(:/images/spindown_hover.png) 1;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    border-image: url(:/images/spindown_pressed.png) 1;\n"
"}")
        self.btnCikis.setObjectName("btnCikis")
        self.verticalLayout.addWidget(self.btnCikis)
        self.layoutWidget3 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget3.setGeometry(QtCore.QRect(130, 690, 107, 20))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.layoutWidget3)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.layoutWidget4 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget4.setGeometry(QtCore.QRect(30, 690, 100, 21))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.layoutWidget4)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_8 = QtWidgets.QLabel(self.layoutWidget4)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_8.addWidget(self.label_8)
        self.lb = QtWidgets.QLabel(self.layoutWidget4)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.lb.setFont(font)
        self.lb.setText("")
        self.lb.setObjectName("lb")
        self.horizontalLayout_8.addWidget(self.lb)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1280, 21))
        self.menuBar.setObjectName("menuBar")
        self.menuYard_m = QtWidgets.QMenu(self.menuBar)
        self.menuYard_m.setObjectName("menuYard_m")
        MainWindow.setMenuBar(self.menuBar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.toolBar_2 = QtWidgets.QToolBar(MainWindow)
        self.toolBar_2.setObjectName("toolBar_2")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar_2)
        self.actionHakk_nda = QtWidgets.QAction(MainWindow)
        self.actionHakk_nda.setObjectName("actionHakk_nda")
        self.menuYard_m.addAction(self.actionHakk_nda)
        self.menuBar.addAction(self.menuYard_m.menuAction())

        self.retranslateUi(MainWindow)
        self.cmbOdeme.setCurrentIndex(-1)
        self.cmbArac.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "Müşteri Bilgileri"))
        self.label.setText(_translate("MainWindow", "Müşteri Adı:"))
        self.label_2.setText(_translate("MainWindow", "Müşteri Telefon:"))
        self.lneNumber.setInputMask(_translate("MainWindow", "(999)999 99 99"))
        self.lneNumber.setText(_translate("MainWindow", "()  "))
        self.label_5.setText(_translate("MainWindow", "Tercih Edilen Ödeme Şekli:"))
        self.rdNakit.setText(_translate("MainWindow", "Nakit"))
        self.radioButton_2.setText(_translate("MainWindow", "Kart"))
        self.label_6.setText(_translate("MainWindow", "Tercih Edilen Ödeme Aralığı:"))
        self.cmbOdeme.setItemText(0, _translate("MainWindow", "Günlük"))
        self.cmbOdeme.setItemText(1, _translate("MainWindow", "Haftalık"))
        self.cmbOdeme.setItemText(2, _translate("MainWindow", "Aylık"))
        self.label_3.setText(_translate("MainWindow", "Teslimat Sorumlusu Araç:"))
        self.cmbArac.setItemText(0, _translate("MainWindow", "ARAÇ 1"))
        self.cmbArac.setItemText(1, _translate("MainWindow", "ARAÇ 2"))
        self.cmbArac.setItemText(2, _translate("MainWindow", "ARAÇ 3"))
        self.cmbArac.setItemText(3, _translate("MainWindow", "ARAÇ 4"))
        self.label_7.setText(_translate("MainWindow", "Teslimat Saat Aralığı:"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)
        item = self.listWidget.item(0)
        item.setText(_translate("MainWindow", "05:00"))
        item = self.listWidget.item(1)
        item.setText(_translate("MainWindow", "06:00"))
        item = self.listWidget.item(2)
        item.setText(_translate("MainWindow", "07:00"))
        item = self.listWidget.item(3)
        item.setText(_translate("MainWindow", "08:00"))
        item = self.listWidget.item(4)
        item.setText(_translate("MainWindow", "09:00"))
        item = self.listWidget.item(5)
        item.setText(_translate("MainWindow", "10:00"))
        item = self.listWidget.item(6)
        item.setText(_translate("MainWindow", "11:00"))
        item = self.listWidget.item(7)
        item.setText(_translate("MainWindow", "12:00"))
        item = self.listWidget.item(8)
        item.setText(_translate("MainWindow", "13:00"))
        item = self.listWidget.item(9)
        item.setText(_translate("MainWindow", "14:00"))
        item = self.listWidget.item(10)
        item.setText(_translate("MainWindow", "15:00"))
        item = self.listWidget.item(11)
        item.setText(_translate("MainWindow", "16:00"))
        item = self.listWidget.item(12)
        item.setText(_translate("MainWindow", "17:00"))
        item = self.listWidget.item(13)
        item.setText(_translate("MainWindow", "18:00"))
        item = self.listWidget.item(14)
        item.setText(_translate("MainWindow", "19:00"))
        item = self.listWidget.item(15)
        item.setText(_translate("MainWindow", "20:00"))
        self.listWidget.setSortingEnabled(__sortingEnabled)
        self.label_4.setText(_translate("MainWindow", "Ticaret Başlama Tarihi:"))
        self.btnEkle.setText(_translate("MainWindow", "MÜŞTERİ EKLE"))
        self.btnAra.setText(_translate("MainWindow", "MÜŞTERİ ARA"))
        self.btnSil.setText(_translate("MainWindow", "MÜŞTERİ SİL"))
        self.btnListele.setText(_translate("MainWindow", "TÜMÜNÜ LİSTELE"))
        self.btnGuncelle.setText(_translate("MainWindow", "GÜNCELLE"))
        self.btnCikis.setText(_translate("MainWindow", "ÇIKIŞ"))
        self.label_8.setText(_translate("MainWindow", "Kayıt Sayısı:"))
        self.menuYard_m.setTitle(_translate("MainWindow", "Yardım"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.toolBar_2.setWindowTitle(_translate("MainWindow", "toolBar_2"))
        self.actionHakk_nda.setText(_translate("MainWindow", "Hakkında"))

